name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DEBUG: 1
  REPOS_NAME: oc-p13
  IMG_TAG: latest

jobs:

  build:
    runs-on: windows-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Activate venv and install dep (debug mod)

      if: ${{ env.DEBUG == 1 }}
      run: |
        echo 'Hi, project in DEV mod'
        python -m venv venv
        . venv/scripts/activate
        echo 'requirements setup...'
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: install dep (prod mod)
      if: ${{ env.DEBUG == 0 }}
      run: |
        echo 'Hi, project in PROD mod'
        python -m pip install --upgrade pip
        echo 'requirements setup...'
        pip install -r requirements.txt

    - name: Black test
      run: |
        . venv/scripts/activate
        echo 'black running...'
        black --line-length=99 .

    - name: Linting test
      run: |
        . venv/scripts/activate
        echo 'flake8 running...'
        flake8

    - name: Other tests
      run: |
        . venv/scripts/activate
        echo 'pytest running...'
        pytest --disable-warnings

  build-and-push-to-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
            images: ${{ secrets.DOCKER_USERNAME }}/${{ env.REPOS_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME}}/${{ env.REPOS_NAME }}:${{ env.IMG_TAG}}

  deploy-to-render:
    runs-on: windows-latest
    steps:
    - name: Deploy to render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.MY_RENDER_SERVICE_ID }}
        api-key: ${{ secrets.MY_RENDER_API_KEY }}
